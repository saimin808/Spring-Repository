01_스프링 프레임워크.txt

 # 프레임워크
 
 	- 프로젝트 개발에 효율적인 구조를 미리 만들어 놓은 것 (템플릿 같은 느낌)
 	- 개발자가 이미 완성된 구조에 빈칸을 채우는 형식으로 프로젝트를 진행할 수 있다.
 	- 전체적인 구조에 신경을 덜 써도 되기 때문에 초보 개발자도 프로젝트에 투입할 수 있다.
 	- 어느정도 수준 이상의 품질이 항상 보장된다.
 	- 개발 비용이 많이 절감된다.
 	
 # 스프링 프레임워크
 
 	- 자바를 이용해 웹 어플리케이션 서버 개발을 진행하기 위한 프레임워크
 	- 다양한 디자인 패턴과 기능들이 미리 구현되어 있기 때문에
 	  효율적으로 개발을 진행할 수 있다.
 	  
 # 스프링의 특징
 
 	1. POJO (Plain Old Java Object)
 	
 		- JSP처럼 새로운 문법을 익혀야하는 것들의 사용을 지양한다.
 		- 백엔드에는 JSP 코드를 절대 사용하지 않으며 순수 JAVA코드로 작성해야 한다.
 		- 익숙치 않은 별도의 API를 사용하지 않음으로써 개발자의 혼란을 최소화 한다.
 		
 	2. 의존성 주입 (DI, Dependency Injection)
 	
 		- 생성자를 아예 사용하지 않는다.
 		- 프로젝트 내부의 생성자 사용을 모두 제거하여 소스 코드간의 결합도를 낮춘다.
 		  (결합도가 높은 상황 - 하나 수정하면 소스 코드 100개 수정해야 하는 상황)
 		  
# 스프링 프로젝트의 기본 구조

	- src/main/java : 메인 자바 코드를 작성하는 곳
	- src/main/resources : 메인 자바 코드를 실행하기 위한 자원들을 저장하는 곳
	- src/test/java : 작성한 자바 코드에 대한 테스트 코드를 작성하는 곳
	- src/test/resources : 테스트 코드를 실행하기 위한 자원들을 저장하는 곳
	- Maven Dependencies : 이 프로젝트가 의존하고 있는 라이브러리들 (pom.xml)
	- webapp/resoures : 웹 리소스들을 보관하는 곳 (Apache)
	- webapp/WEB-INF/views : 뷰 페이지(.jsp)들을 보관하는 곳 (Tomcat)
	- webapp/WEB-INF/spring/appServlet/servlet-context.xml (서블릿 영역)
		: 스프링 MVC 프로젝트의 프론트 컨트롤러 역할을 하는 DispatcherServlet 클래스 내부에서 활용될
		  초기화 파라미터 값들
	- webapp/WEB-INF/spring/root-context.xml (전체 컨텍스트 영역)
		: 프로젝트 내부의 모든 서블릿 및 필터들에서 가져다 사용할 수 있는
		  전역 초기화 파라미터들을 설정해 놓는 파일
	- pom.xml : 메이븐 프로젝트에서 사용하는 설정 파일. 메이븐은 프로젝트를 자동으로 관리하는 도구.